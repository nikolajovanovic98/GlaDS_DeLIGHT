!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! Niki's attempt at GLaDS         !! 
!!                                 !!
!! Nikola Jovanovic November 2024  !!
!!                                 !!
!! Following SHMIP Example         !!
!!                                 !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Written in LUA (SHMIP test) 

!---LUA BEGIN
! function minHydroPot(t)
!   if t<1581.0 then return 1 else return -1 end
! end
!---LUA END

!---LUA BEGIN
! function minHydroPot2(t)
!   if t>0 then return 1 else return -1 end
! end
!---LUA END

! 1581
! 1746.5

!check keyword warn 
echo on 

!#Bnum = "B5" 
$namerun = "testrun_"
$namerun = "glads_3d_hydpot_test_"
$namemesh = "partest"
$restartfile = "partest.result"
$outdir = "partest/results"
$ncfile = "partest/input_saved_millan.nc"

include "Physical_Parameters.IN" 

Header
  Mesh DB "." $namemesh 
End

!---------------------------------------------------
!---------------- CONSTANTS ------------------------
!---------------------------------------------------

Constants 
  Latent Heat         = Real #Lw
  Gravity Norm        = Real #gravity
  Fresh Water Density = Real #rhow
  Ice Density         = Real #rhoi
  Sheet Thickness Variable Name = String "Sheet Thickness"
  Hydraulic Potential Variable Name = String "Hydraulic Potential"
  Channel Area Variable Name = String "Channel Area" 
  Bedrock Variable Name = String "ubed"
  Surface Variable Name = String "usurf" 
End  

!#Startyear=0.0

!---------------------------------------------------
!---------------- SIMULATION -----------------------
!---------------------------------------------------

Simulation
  Coordinate System = Cartesian 3D 
  Simulation Type = Transient 

  Timestepping Method = "bdf" 
  BDF Order = 1

  Timestep Intervals(1) = #Iter 
  Output Intervals(1) = #OutPut
  Timestep Sizes(1) = #dtIni 

  Steady State Max Iterations = 1 
  Steady State Min Iterations = 1

  ! Internal extrusion 
  Extruded Mesh Levels = Integer 10 
  Extruded Mesh Ratio = 1.0
  Preserve Edges = Logical True
  Preserve Baseline = Logical True

  ! Restart? Or loading usurf and ubed? 
  Restart File = $restartfile
  !Restart Position = -1 
  !Restart Time = Real #Startyear
  Restart Before Initial Conditions = Logical True

  Post File = $namerun".vtu"
  max output level = 3 
End  

!---------------------------------------------------
!---------------- BODIES ---------------------------
!---------------------------------------------------

! This body is located at the ice/bed interface and will be used to solve
! the sheet equation 

Body 1
  Name = "Ice"
  Equation = 1
  Material = 1
  Body Force = 1
  Initial Condition = 1
End

Body 2
  Name = "sheet"
  Equation = 2
  Material = 1
  Body Force = 1
  Initial Condition = 1
End 

!---------------------------------------------------
!---------------- INITIAL CONDITIONS ---------------
!---------------------------------------------------

!! for the sheet
Initial Condition 1 
  Sheet Thickness = Real #Hs
  Zs = Equals usurf
  Zb = Equals ubed
  Effective Pressure = Variable Zs,Zb
    Real LUA "rhoi*gravity*(tx[0]-tx[1])"
End

!---------------------------------------------------
!---------------- BODY FORCES ----------------------
!---------------------------------------------------

! source 1 cm/day
Body Force 1
  Hydraulic Potential Volume Source = Real #Source 
End

!---------------------------------------------------
!---------------- MATERIALS ------------------------
!---------------------------------------------------

!! ice material properties in MPa - m - a system 
Material 1
  Density = Real #rhoi          
  Glen Exponent = Real #ng

! For the sheet 
  Sheet Conductivity = Real #Ks 
  Sheet flow exponent alpha = Real #alphas
  Sheet flow exponent beta = Real #betas
  Englacial Void Ratio = Real #ev       

  !Sliding Velocity = Real #ub
  Sliding Velocity = Variable uvelsurfobs, vvelsurfobs
    Real LUA "0.8*(math.sqrt(tx[0]^2+tx[1]^2))"

  Bedrock Bump Length = Real #lr
  Bedrock Bump High = Real #hr
  Sheet Closure Coefficient = Real #Ar 
! For the Channels
  Channel Conductivity = Real #Kc 
  Channel flow exponent alpha = Real #alphac
  Channel flow exponent beta = Real #betac
  Channel Closure Coefficient = Real #Ac
  Sheet Width Over Channel = Real #lc
  Pressure Melting Coefficient = Real #Ct
  Water Heat Capacity = Real #Cw

! For both
  Ice Normal Stress = Variable Zs,Zb
     Real LUA "rhoi*gravity*(tx[0]-tx[1])"
End

!---------------------------------------------------
!---------------- SOLVERS --------------------------
!---------------------------------------------------
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 1
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"
  
  Active Coordinate = Integer 3 
  Mesh Velocity Variable = String "dSdt"
  Mesh Update Variable = String "dS"
  Mesh Velocity First Zero = Logical True
  Correct Surface = Logical True
  Minimum Height = Real #minH

  Top Surface Variable Name = String "usurf"
  Bottom Surface Variable Name = String "ubed"  
End

Solver 2 
  Exec Solver = Before Simulation
  Equation = "MaskLowestNode"
  Procedure = "parSRC/minelevmask" "minelevmask"

  Variable = -dofs 1 "LowestElevationMask"
End

Solver 3
  Equation = "GlaDS Coupled sheet"
  Procedure = "ElmerIceSolvers" "GlaDSCoupledSolver"
  Variable = -dofs 1 "Hydraulic Potential" 

  Activate Channels = Logical True 
  Activate Melt from Channels = Logical True
  Neglect Sheet Thickness in Potential = Logical True
  Max Channel Area = Real #chA
  Max Sheet Thickness = Real #maxThk

 ! choices are EXCPLICIT, CRANK-NICOLSON, IMPLICIT
  Channels Integration method = String "Crank-Nicolson"
  Sheet Integration method = String "Crank-Nicolson"

  Exported Variable 1 = -dofs 1 "Vclose"
  Exported Variable 2 = -dofs 1 "Wopen"
  Exported Variable 3 = -dofs 1 "Normal Stress"
  Exported Variable 4 = -dofs 1 "Water Pressure"
  Exported Variable 5 = -dofs 1 "Effective Pressure"
  Exported Variable 6 = -dofs 2 "Sheet Discharge"
  Exported Variable 7 = -dofs 1 "Sheet Storage"
  Exported Variable 8 = -dofs 1 "Flux from Moulins"

  Linear System Solver = Direct 

  !Replace UMFPACK with MUMPS IF you are using
  !multiple partitions 
  Linear System Direct Method = MUMPS
  !Linear System Direct Method = UMFPACK

  Nonlinear System Max Iterations = 10
  Nonlinear System Convergence Tolerance  = 1.0e-6
  Nonlinear System Relaxation Factor = 1.00

  Coupled Max Iterations = Integer 10
  Coupled Convergence Tolerance = Real 1.0e-3

  Steady State Convergence Tolerance = 1.0e-03
End

Solver 4 
  ! Just here to declare the variable Sheet Thickness
  Equation = "GlaDS Thickness sheet"
  Procedure = "ElmerIceSolvers" "GlaDSsheetThickDummy"
  Variable = -dofs 1 "Sheet Thickness"
End

Solver 5
  ! Just here for output and declare the Channel Area variable
  ! It is executed simultaneously to saving
  Exec Solver = After Timestep
  Equation = "GlaDS Channel OutPut" 
  Procedure = "ElmerIceSolvers" "GlaDSchannelOut"
  Variable = -dofs 1 "Channel Area" 
  ! Define that the variable is defined on the edges only 
  Element = "n:0 e:1" 

  Exported Variable 1 = -dofs 1 "Channel Flux" 

  VTU OutPutFile = Logical True
  VTU BinaryFile = Logical False 

  Channels OutPut Directory Name = String $outdir
  Channels OutPut File Name = String $namerun"channels"
End

Solver 6
  Exec Solver = Never
  Equation = "Navier-Stokes"
  Linear System Solver = Direct     

  !Replace UMFPACK with MUMPS IF you are using
  !multiple partitions 
  Linear System Direct Method = MUMPS
  !Linear System Direct Method = UMFPACK

  Nonlinear System Max Iterations = 50
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Newton After Iterations = 50  
  Nonlinear System Newton After Tolerance = 1.0e-05
  Nonlinear System Relaxation Factor = 1.00
  Nonlinear System Reset Newton = Logical True
    
  Steady State Convergence Tolerance = Real 1.0e-4

  Stabilization Method = String Bubbles

  Exported Variable 1 = Flow Solution Loads[Stress Vector:2 CEQ Residual:1] 
  Exported Variable 2 = -dofs 1 "Zs"
  Exported Variable 3 = -dofs 1 "Zb"
  Exported Variable 4 = -dofs 1 "dS"
  Exported Variable 5 = -dofs 1 "dSdt"
  Calculate Loads = Logical True

  Flow Model = String "Stokes"
End

Solver 7 
  !Exec Solver = Never
  Exec Solver = After Timestep 
  Equation    = "Discharge"
  Procedure   = "parSRC/discharge" "get_Discharge"

  Variable = -dofs 1 "Subglacial Outflow"

  Update Exported Variables = Logical True
  Exported Variable 1 = -dofs 1 "Sheet Outflow"
  Exported Variable 2 = -dofs 1 "Channel Outflow"
End

! third
Solver 8
  !Exec Solver = Never 
  Exec Solver = Before TimeStep
  Equation = "MoulinFlux" 
  Procedure = "parSRC/new_flowrouting" "AdjustMoulinFlux"

  Variable = -dofs 1 "ScaledMoulinFlux" 
End 

Solver 9 
  Exec Solver = "Before Simulation" 
  Equation = "Read velocities" 
  Variable = -nooutput "dummy" 

  Procedure = "GridDataReader" "GridDataReader" 

  Filename = File $ncfile

  X Dim Name = File "x" 
  Y Dim Name = File "y"

  X Var Name = File "x"
  Y Car Name = File "y" 

  ! -- Interpolation variables
  X Epsilon  = Real 1.0e-2
  Y Epsilon  = Real 1.0e-2
  Time Epsilon  = Real 0.01

  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0

  Is Time Counter = Logical False

  Variable 1 = File "uvelsurfobs"  
  Variable 2 = File "vvelsurfobs"  

  Exported Variable 1 = "uvelsurfobs"
  Exported Variable 2 = "vvelsurfobs"
End

!---------------------------------------------------
!---------------- EQUATIONS ------------------------
!---------------------------------------------------

! Equation for the ice (1 4 5)
Equation 1
  Active Solvers(5) = 1 2 5 6 9 
End

Equation 2 
  Active Solvers(4) = 3 4 7 8 
End
! 2 3 6
!---------------------------------------------------
!---------------- BOUNDARY CONDITIONS --------------
!---------------------------------------------------

Boundary Condition 1
  Target Boundaries(1) = 1
  No Channel BC = Logical True
  Sheet Thickness = Real 0.01
  !Hydraulic Potential = Real Procedure "SRC/minHydPot" "minHydPot"
End

! This is the boundary condition for the moulins, case B5
Boundary Condition 2
  Name = "moulins"
  !Target Boundaries(3) =  2 3 4
  !Target Boundaries(37) = 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
  Target Boundaries(35) = 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 
  !Target Boundaries(100) = 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
  Moulin Storage = Logical True
  Moulin Area = Real #Am
  Moulin Flux = Equals ScaledMoulinFlux 
  !Moulin Flux = Real #0.9*yearinsec
  !Moulin Flux = Variable usurf
  !  Real Procedure "SRC/flowrouting" "AdjustMoulinFlux"
   !Real LUA "0.9*yearinsec*(0.5*math.sin(2*math.pi*(((tx[0]*365)-180)/365)+0.2)+0.5)*(0.5*math.sin(2*math.pi*((tx[0]*365)%1)-(math.pi/2))+0.5)"

End

!Variable TimeStep

! Mind that the numbering continues with the extruded boundaries of the first four - we don't need them, but we have to account for them

! the order of the two following boundaries is important
! first the bed and then the surface
! they have to come after the last targeted boundary (from the mesh.boundary file)

Boundary Condition 5
  Name = "bed"
  Body Id = 2
  Velocity 1 = Real 0.0
  Velocity 2 = Real 0.0
  Velocity 3 = Real 0.0
  Hydraulic Potential = Variable ubed
    Real LUA "rhow*gravity*tx[0]"
  Hydraulic Potential Condition = Variable LowestElevationMask
    Real LUA "minHydroPot2(tx[0])"
    !Real Procedure "SRC/minHydPot" "hpotfunc" 
End


!Real Procedure "SRC/minHydPot2" "hpotfunc"
!Real LUA "minHydroPot(tx[0])" 


Boundary Condition 6
  Name = "surface"
End

!Solver 2 :: Reference Norm = Real 8.28146474E+00 
!Solver 2 :: Reference Norm Tolerance = Real 1E-04
